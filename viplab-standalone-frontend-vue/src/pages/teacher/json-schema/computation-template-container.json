{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "http://virtualprogramminglab.github.io/schemas/ComputationTemplateJSONMessage.json",

    "type" : "object",

    "properties" : {
        "identifier" : {
            "type" : "string",
            "description": "uuid; the identifier of this computation template. Can be generated by the frontend launcher"
        },
        "version" : {
            "type" : "string",
            "description": "Version of the json specification; should be given for backwards compatibility"
        },
        "metadata" : {
            "type" : "object",
            "description": "Contains information for frontend",
            "properties" : {
                "displayName" : {
                    "type" : "string",
                    "description" : "Name of computation template shown in frontend"
                },
                "description" : {
                    "type" : "string",
                    "description" : "Short description, mostly a few lines. A longer description should be given outside the computation template."
                },
                "output": {
                    "type": "object",
                    "properties": {
                        "viewer": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum" : ["Image", "ParaView", "ViPLabGraphics", "CSV"]
                            },
                            "additionalItems": false
                        },
                        "csv": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "basename" : {
                                        "type" : "string",
                                        "minLength": 1,
                                        "description": "part of filename, that is shared by connected files"
                                    },
                                    "xlabel" : {
                                        "type": "object",
                                        "properties": {
                                            "key" : {
                                                "type" : "string",
                                                "minLength": 1,
                                                "description": "key for x-axis given in csv header"
                                            },
                                            "label" : {
                                                "type" : "string",
                                                "description": "x-axis label for diagram"
                                            },
                                            "factor" : {
                                                "type" : "number",
                                                "description": "Multiply x-values with this factor"
                                            },
                                            "format" : {
                                                "type" : "string",
                                                "description": "Format the x-axis values according to format string - https://github.com/d3/d3-format/blob/main/README.md#locale_format"
                                            }
                                        },
                                        "required": ["key"]
                                    },
                                    "plots" : {
                                        "type" : "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "key" : {
                                                    "type" : "string",
                                                    "minLength": 1,
                                                    "description": "key for y-axis given in csv header"
                                                },
                                                "label" : {
                                                    "type" : "string",
                                                    "description": "y-axis label for diagram"
                                                },
                                                "factor" : {
                                                    "type" : "number",
                                                    "description": "Multiply y-values with this factor"
                                                },
                                                "format" : {
                                                    "type" : "string",
                                                    "description": "Format the y-axis values according to format string - https://github.com/d3/d3-format/blob/main/README.md#locale_format"
                                                }
                                            }
                                        },
                                        "required": ["key"]
                                    }
                                },
                                "required": ["basename"]
                            },
                            "uniqueItems": true,
                            "additionalItems": false
                        },
                        "vtk": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "basename" : {
                                        "type" : "string",
                                        "minLength": 1,
                                        "description": "part of filename, that is shared by connected files"
                                    }
                                },
                                "required": ["basename"]
                            },
                            "uniqueItems": true,
                            "additionalItems": false
                        }
                    }
                }
            },
            "additionalProperties": false
        },
        "environment" : {
            "const": "Container",
            "description" : "Specifies the environment used for the Computation. It defines language, runtime, libraries and tools"
        },
        "files" : {
            "type" : "array",
            "description": "Array containing File objects: there has to be at least one element",
            "items" : {
                "type" : "object",
                "properties": {
                    "identifier" : {
                        "type" : "string",
                        "description": "uuid; for later referencing, has to be unique; can be autogenerated by frontend"
                    },
                    "path" : {
                        "type" : "string",
                        "pattern" : "^([A-z0-9-_+]+/?)*([A-z0-9]+([.]([A-z]+))?)$",
                        "description": "Absolute path to file" 
                    },
                    "metadata" : {
                        "type" : "object",
                        "properties": {
                            "syntaxHighlighting" : {
                                "type" : "string",
                                "enum" : ["abap", "abc", "actionscript", "ada", "alda",
                                          "apache_conf", "apex", "applescript", "aql", "asciidoc",
                                          "asl", "assembly_x86", "autohotkey", "batchfile",
                                          "behaviour", "c9search", "c_cpp", "cirru", "clojure",
                                          "cobol", "coffee", "coldfusion", "crystal", "csharp",
                                          "csound_document", "csound_orchestra",
                                          "csound_preprocessor", "csound_score", "csp", "css",
                                          "curly", "d", "dart", "diff", "django", "doc_comment",
                                          "dockerfile", "dot", "drools", "edifact", "eiffel", "ejs",
                                          "elixir", "elm", "erlang", "forth", "fortran", "fsharp",
                                          "fsl", "ftl", "gcode", "gherkin", "gitignore", "glsl",
                                          "gobstones", "golang", "graphqlschema", "groovy", "haml",
                                          "handlebars", "haskell", "haskell_cabal", "haxe", "hjson",
                                          "html", "html_completions", "html_elixir", "html_ruby",
                                          "ini", "io", "ion", "jack", "jade", "java", "javascript",
                                          "js_regex", "json", "json5", "jsp", "jssm", "jsx",
                                          "julia", "kotlin", "latex", "latte", "less", "liquid",
                                          "lisp", "livescript", "logiql", "logtalk", "lsl", "lua",
                                          "luapage", "lucene", "makefile", "markdown", "mask",
                                          "matching_brace_outdent", "matching_parens_outdent",
                                          "matlab", "maze", "mediawiki", "mel", "mips", "mixal",
                                          "mushcode", "mysql", "nginx", "nim", "nix", "nsis",
                                          "nunjucks", "objectivec", "ocaml", "partiql", "pascal",
                                          "perl", "pgsql", "php", "php_laravel_blade", "pig",
                                          "plain_text", "powershell", "praat", "prisma", "prolog",
                                          "properties", "protobuf", "puppet", "python", "qml", "r",
                                          "raku", "razor", "rdoc", "red", "redshift", "rhtml",
                                          "robot", "rst", "ruby", "rust", "sac", "sass", "scad",
                                          "scala", "scheme", "scrypt", "scss", "sh", "sjs", "slim",
                                          "smarty", "smithy", "snippets", "soy_template", "space",
                                          "sparql", "sql", "sqlserver", "stylus", "svg", "swift",
                                          "tcl", "terraform", "tex", "text", "textile", "toml",
                                          "tsx", "turtle", "twig", "typescript", "vala", "vbscript",
                                          "velocity", "verilog", "vhdl", "visualforce", "wollok",
                                          "xml", "yaml", "zeek"],
                                "description": "Mode of the ace editor. List can be found in on github: https://github.com/ajaxorg/ace/tree/master/src/mode. Examples: 'ini', 'c_cpp', 'matlab', 'java'. See also Ace demo: http://ajaxorg.github.io/ace-builds/kitchen-sink.html"
                            },
                            "MIMEtype" : {
                                "type": "string",
                                "description": "MIMEtype of the content. Examples: text/plain, text/html, text/uri-list, application/x-vgf, application/x-vgf3, application/x-vgfc. Descriptions: text/uri-list: links to websides to be presented in SC; application/x-vgf: generated graphics output in 'ViP graphics format'; application/x-vgf3: generated graphics output in 'ViP graphics format 3D'; application/x-vgfc: generated graphics output in 'ViP graphics format contour plot'"
                            },
                            "description" : {
                                "type": "string",
                                "description": "Additional information about the file, e.g. what it is used for."
                             }

                        },
                        "additionalProperties": false
                    },
                    "parts" : {
                        "type" : "array",
                        "items" : {
                            "type" : "object",
                            "properties": {
                                "identifier" : { 
                                    "type" : "string",
                                    "description": "For later referencing, has to be unique; can be autogenerated by frontend" 
                                },
                                "access" : {
                                    "type" : "string",
                                    "enum" : ["invisible", "visible", "modifiable", "template"],
                                    "description": "Defines the access level of this part for the user. See Notes on access levels for more details: https://virtualprogramminglab.github.io/documentation/viplab3.0/computation_template/#notes-on-access-levels-in-parts"
                                },
                                "metadata" : {
                                    "type" : "object",
                                    "description": "Contains information mainly for the frontend",
                                    "properties": {
                                        "description" : {
                                            "type" : "string",
                                            "description" : "Additional information about this part, e.g., what it is about; can also be a headline."
                                        }
                                    },
                                    "additionalProperties": false
                                },
                                "content" : { 
                                    "type" : "string",
                                    "description": "Base64url encoded source code"
                                }
                            },
                            "if" : {
                                "properties" : { 
                                    "access" : { "const" : "template" } 
                                }
                            },
                            "then" : {
                                "properties" : {
                                    "parameters" : {
                                        "type" : "array",
                                        "description": "Parameters can be used to supply values at runtime to the configuration",
                                        "items" : {
                                            "type": "object"
                                        },
                                        "additionalItems": false,
                                        "minItems" : 1
                                    }
                                }
                            }, 
                            "required" : ["identifier", "access", "content"]
                        },
                        "additionalItems": false,
                        "minItems" : 1
                    }
                },
                "additionalProperties": false,
                "required" : ["identifier", "path", "parts"]
            },
            "additionalItems": false
        },
        "parameters" : {
            "type" : "array",
            "description": "Parameters can be used to supply values at runtime to the configuration",
            "items" : {
                "type": "object"
            },
            "additionalItems": false,
            "minItems" : 1
        },
        "configuration" : {
            "type" : "object",
            "description": "Optional or must (depends on environment). Environment specific configurations; Different phases can be configured like compiling, checking (for legal function calls in source code), ...",
            "properties" : {
                "running.timelimitInSeconds" : { 
                    "type" : "integer",
                    "description": "Optional; CPU time limit. For all environments, for semantics see Notes to 'timelimitInSeconds'"
                },
                "running.commandLineArguments" : { 
                    "type" : "string",
                    "description": "Optional; For C, C++, Java: arguments given to main() function; for DuMuX, Container: additional command line args" 
                },
                "running.entrypoint" : { 
                    "type" : "string",
                    "description": "Must for Container. Executable to run inside the container" 
                },
                "running.userId" : { 
                    "type" : "integer",
                    "description": "user id of the user that writes files inside the container. Needed to set correct permissions" 
                },
                "running.intermediateFilesPattern" : { 
                    "type" : "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Optional; for Container. Regex-expression in stdout which file is ready to be transferred"
                },
                "resources.image" : { 
                    "type" : "string",
                    "format": "uri",
                    "description": "Must for Container; has to be a tar. Location of the image to be executed" 
                }, 
                "resources.volume" : { 
                    "type" : "string",
                    "description": "Must for Container. Path in the container where data is placed" 
                },
                "resources.memory" : { 
                    "type" : "string",
                    "description": "Optional (64mb); for Container. Memory limit for the container"
                },
                "resources.numCPUs" : { 
                    "type" : "integer",
                    "description": "Optional; for Container. Number of CPUs for the container"
                },
                "resources.diskSpace" : { 
                    "type" : "integer",
                    "description": "Optional; for Container. Disk space limit for the container"
                }
            },
            "additionalProperties": false,
            "required": ["resources.image"]
        }
    },
    "additionalProperties": false,
    "required" : ["identifier", "environment", "configuration"]
}